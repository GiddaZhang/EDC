ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_PeriodElapsedCallback
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_TIM_PeriodElapsedCallback:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "jy62.h"
  30:Core/Src/main.c **** #include <math.h>
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** float set_speed = 10.0;
  37:Core/Src/main.c **** int count_to_ten = 0;
  38:Core/Src/main.c **** volatile float distance1 = 0.0, distance2 = 0.0, distance3 = 0.0, distance4 = 0.0;
  39:Core/Src/main.c **** extern uint8_t jy62Receive[JY62_MESSAGE_LENGTH];
  40:Core/Src/main.c **** extern uint8_t jy62Message[JY62_MESSAGE_LENGTH];
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** float angle_obj;
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** const float Kp = 300.0;
  58:Core/Src/main.c **** const float Ki = -118;
  59:Core/Src/main.c **** const float Kd = 50;
  60:Core/Src/main.c **** float state[3] = {0.0};
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
  73:Core/Src/main.c **** {
  28              		.loc 1 73 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 73 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  74:Core/Src/main.c ****     HAL_UART_Receive_DMA(&huart2, jy62Receive, JY62_MESSAGE_LENGTH);
  38              		.loc 1 74 5 is_stmt 1 view .LVU2
  39 0002 0B22     		movs	r2, #11
  40 0004 0249     		ldr	r1, .L3
  41 0006 0348     		ldr	r0, .L3+4
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 3


  42              	.LVL1:
  43              		.loc 1 74 5 is_stmt 0 view .LVU3
  44 0008 FFF7FEFF 		bl	HAL_UART_Receive_DMA
  45              	.LVL2:
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     if (htim->Instance == TIM1)
  46              		.loc 1 76 5 is_stmt 1 view .LVU4
  77:Core/Src/main.c ****     {
  78:Core/Src/main.c ****         // if (angle_obj - GetYaw() > -5 && angle_obj - GetYaw() < 5 && dis_obj > 2)
  79:Core/Src/main.c ****         // {
  80:Core/Src/main.c ****         //     //?? ? ? ? ? ? ?
  81:Core/Src/main.c ****         // }
  82:Core/Src/main.c ****         // else if (dis_obj > 2)
  83:Core/Src/main.c ****         // {
  84:Core/Src/main.c ****         //     rotate();
  85:Core/Src/main.c ****         // }
  86:Core/Src/main.c ****         // else
  87:Core/Src/main.c ****         // {
  88:Core/Src/main.c ****         //     //??????
  89:Core/Src/main.c ****         // }
  90:Core/Src/main.c ****     }
  47              		.loc 1 90 5 view .LVU5
  91:Core/Src/main.c **** }
  48              		.loc 1 91 1 is_stmt 0 view .LVU6
  49 000c 08BD     		pop	{r3, pc}
  50              	.L4:
  51 000e 00BF     		.align	2
  52              	.L3:
  53 0010 00000000 		.word	jy62Receive
  54 0014 00000000 		.word	huart2
  55              		.cfi_endproc
  56              	.LFE65:
  58              		.global	__aeabi_fmul
  59              		.global	__aeabi_fadd
  60              		.global	__aeabi_fcmpge
  61              		.global	__aeabi_fcmple
  62              		.section	.text.pid,"ax",%progbits
  63              		.align	1
  64              		.global	pid
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	pid:
  71              	.LVL3:
  72              	.LFB68:
  92:Core/Src/main.c **** /* USER CODE END 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief  The application entry point.
  96:Core/Src/main.c ****   * @retval int
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** int main(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 102:Core/Src/main.c **** 
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 4


 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c ****     jy62_Init(&huart2);
 110:Core/Src/main.c ****     SetBaud(115200);
 111:Core/Src/main.c ****     SetHorizontal();
 112:Core/Src/main.c ****     InitAngle();
 113:Core/Src/main.c ****     Calibrate();
 114:Core/Src/main.c ****     SleepOrAwake();
 115:Core/Src/main.c ****   /* USER CODE END Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Configure the system clock */
 118:Core/Src/main.c ****   SystemClock_Config();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END SysInit */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Initialize all configured peripherals */
 125:Core/Src/main.c ****   MX_GPIO_Init();
 126:Core/Src/main.c ****   MX_TIM1_Init();
 127:Core/Src/main.c ****   MX_TIM2_Init();
 128:Core/Src/main.c ****   MX_TIM8_Init();
 129:Core/Src/main.c ****   MX_TIM3_Init();
 130:Core/Src/main.c ****   MX_TIM4_Init();
 131:Core/Src/main.c ****   MX_DMA_Init();
 132:Core/Src/main.c ****   MX_USART2_UART_Init();
 133:Core/Src/main.c ****   MX_USART1_UART_Init();
 134:Core/Src/main.c ****   MX_TIM5_Init();
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 136:Core/Src/main.c ****     zigbee_Init(&huart1);
 137:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim1);
 138:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_1);
 139:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 140:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_3);
 141:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_4);
 142:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_1);
 143:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_2);
 144:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_1);
 145:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_2);
 146:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_1);
 147:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_2);
 148:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_1);
 149:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_2);
 150:Core/Src/main.c ****     jy62_Init(&huart2);
 151:Core/Src/main.c ****     void jy62_Init(UART_HandleTypeDef * huart);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 154:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 155:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 156:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 157:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_SET);
 158:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 159:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 5


 160:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 161:Core/Src/main.c ****   /* USER CODE END 2 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* Infinite loop */
 164:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 165:Core/Src/main.c ****     while (1)
 166:Core/Src/main.c ****     {
 167:Core/Src/main.c ****     /* USER CODE END WHILE */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 170:Core/Src/main.c ****     }
 171:Core/Src/main.c ****   /* USER CODE END 3 */
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief System Clock Configuration
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** void SystemClock_Config(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 184:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 213:Core/Src/main.c **** float pid(float in)
 214:Core/Src/main.c **** {
  73              		.loc 1 214 1 is_stmt 1 view -0
  74              		.cfi_startproc
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 6


  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 214 1 is_stmt 0 view .LVU8
  78 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 24
  81              		.cfi_offset 3, -24
  82              		.cfi_offset 4, -20
  83              		.cfi_offset 5, -16
  84              		.cfi_offset 6, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 0546     		mov	r5, r0
 215:Core/Src/main.c ****     float out;
  88              		.loc 1 215 5 is_stmt 1 view .LVU9
 216:Core/Src/main.c ****     // y[n] = A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
 217:Core/Src/main.c ****     out = ((Kp + Ki + Kd) * in) + ((-Ki - 2 * Kd) * state[0]) + (Kd * state[1]);
  89              		.loc 1 217 5 view .LVU10
  90              		.loc 1 217 27 is_stmt 0 view .LVU11
  91 0004 1749     		ldr	r1, .L17
  92 0006 FFF7FEFF 		bl	__aeabi_fmul
  93              	.LVL4:
  94              		.loc 1 217 27 view .LVU12
  95 000a 0646     		mov	r6, r0
  96              		.loc 1 217 58 view .LVU13
  97 000c 164C     		ldr	r4, .L17+4
  98 000e 2768     		ldr	r7, [r4]	@ float
  99              		.loc 1 217 51 view .LVU14
 100 0010 1649     		ldr	r1, .L17+8
 101 0012 3846     		mov	r0, r7
 102 0014 FFF7FEFF 		bl	__aeabi_fmul
 103              	.LVL5:
 104 0018 0146     		mov	r1, r0
 105              		.loc 1 217 33 view .LVU15
 106 001a 3046     		mov	r0, r6
 107 001c FFF7FEFF 		bl	__aeabi_fadd
 108              	.LVL6:
 109 0020 0646     		mov	r6, r0
 110              		.loc 1 217 69 view .LVU16
 111 0022 1349     		ldr	r1, .L17+12
 112 0024 6068     		ldr	r0, [r4, #4]	@ float
 113 0026 FFF7FEFF 		bl	__aeabi_fmul
 114              	.LVL7:
 115 002a 0146     		mov	r1, r0
 116              		.loc 1 217 9 view .LVU17
 117 002c 3046     		mov	r0, r6
 118 002e FFF7FEFF 		bl	__aeabi_fadd
 119              	.LVL8:
 120 0032 0646     		mov	r6, r0
 121              	.LVL9:
 218:Core/Src/main.c ****     state[1] = state[0];
 122              		.loc 1 218 5 is_stmt 1 view .LVU18
 123              		.loc 1 218 14 is_stmt 0 view .LVU19
 124 0034 6760     		str	r7, [r4, #4]	@ float
 219:Core/Src/main.c ****     state[0] = in;
 125              		.loc 1 219 5 is_stmt 1 view .LVU20
 126              		.loc 1 219 14 is_stmt 0 view .LVU21
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 7


 127 0036 2560     		str	r5, [r4]	@ float
 220:Core/Src/main.c ****     if (out >= PID_MAX)
 128              		.loc 1 220 5 is_stmt 1 view .LVU22
 129              		.loc 1 220 8 is_stmt 0 view .LVU23
 130 0038 0E49     		ldr	r1, .L17+16
 131 003a FFF7FEFF 		bl	__aeabi_fcmpge
 132              	.LVL10:
 133              		.loc 1 220 8 view .LVU24
 134 003e 20B1     		cbz	r0, .L13
 221:Core/Src/main.c ****         state[2] = PID_MAX;
 135              		.loc 1 221 9 is_stmt 1 view .LVU25
 136              		.loc 1 221 18 is_stmt 0 view .LVU26
 137 0040 0C4A     		ldr	r2, .L17+16
 138 0042 A260     		str	r2, [r4, #8]	@ float
 139              	.L8:
 222:Core/Src/main.c ****     else if (out <= PID_MIN)
 223:Core/Src/main.c ****         state[2] = PID_MIN;
 224:Core/Src/main.c ****     else
 225:Core/Src/main.c ****         state[2] = out;
 226:Core/Src/main.c ****     return (state[2]);
 140              		.loc 1 226 5 is_stmt 1 view .LVU27
 227:Core/Src/main.c **** }
 141              		.loc 1 227 1 is_stmt 0 view .LVU28
 142 0044 084B     		ldr	r3, .L17+4
 143 0046 9868     		ldr	r0, [r3, #8]	@ float
 144 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 145              	.LVL11:
 146              	.L13:
 222:Core/Src/main.c ****     else if (out <= PID_MIN)
 147              		.loc 1 222 10 is_stmt 1 view .LVU29
 222:Core/Src/main.c ****     else if (out <= PID_MIN)
 148              		.loc 1 222 13 is_stmt 0 view .LVU30
 149 004a 0021     		movs	r1, #0
 150 004c 3046     		mov	r0, r6
 151 004e FFF7FEFF 		bl	__aeabi_fcmple
 152              	.LVL12:
 153 0052 10B9     		cbnz	r0, .L16
 225:Core/Src/main.c ****     return (state[2]);
 154              		.loc 1 225 9 is_stmt 1 view .LVU31
 225:Core/Src/main.c ****     return (state[2]);
 155              		.loc 1 225 18 is_stmt 0 view .LVU32
 156 0054 044B     		ldr	r3, .L17+4
 157 0056 9E60     		str	r6, [r3, #8]	@ float
 158 0058 F4E7     		b	.L8
 159              	.L16:
 223:Core/Src/main.c ****     else
 160              		.loc 1 223 9 is_stmt 1 view .LVU33
 223:Core/Src/main.c ****     else
 161              		.loc 1 223 18 is_stmt 0 view .LVU34
 162 005a 034B     		ldr	r3, .L17+4
 163 005c 0022     		movs	r2, #0
 164 005e 9A60     		str	r2, [r3, #8]	@ float
 165 0060 F0E7     		b	.L8
 166              	.L18:
 167 0062 00BF     		.align	2
 168              	.L17:
 169 0064 00006843 		.word	1130889216
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 8


 170 0068 00000000 		.word	.LANCHOR0
 171 006c 00009041 		.word	1099956224
 172 0070 00004842 		.word	1112014848
 173 0074 00803B45 		.word	1161527296
 174              		.cfi_endproc
 175              	.LFE68:
 177              		.section	.text.Abs,"ax",%progbits
 178              		.align	1
 179              		.global	Abs
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	Abs:
 186              	.LVL13:
 187              	.LFB69:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** short Abs(short in)
 230:Core/Src/main.c **** {
 188              		.loc 1 230 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 231:Core/Src/main.c ****     return in >= 0 ? in : -in;
 193              		.loc 1 231 5 view .LVU36
 194              		.loc 1 231 25 is_stmt 0 view .LVU37
 195 0000 0028     		cmp	r0, #0
 196 0002 B8BF     		it	lt
 197 0004 4042     		rsblt	r0, r0, #0
 198              	.LVL14:
 232:Core/Src/main.c **** }
 199              		.loc 1 232 1 view .LVU38
 200 0006 00B2     		sxth	r0, r0
 201 0008 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE69:
 205              		.section	.text.rotate_counterclockwise,"ax",%progbits
 206              		.align	1
 207              		.global	rotate_counterclockwise
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu softvfp
 213              	rotate_counterclockwise:
 214              	.LVL15:
 215              	.LFB70:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** void rotate_counterclockwise(int pwm)
 235:Core/Src/main.c **** {
 216              		.loc 1 235 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		.loc 1 235 1 is_stmt 0 view .LVU40
 221 0000 38B5     		push	{r3, r4, r5, lr}
 222              	.LCFI2:
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 9


 223              		.cfi_def_cfa_offset 16
 224              		.cfi_offset 3, -16
 225              		.cfi_offset 4, -12
 226              		.cfi_offset 5, -8
 227              		.cfi_offset 14, -4
 228 0002 0546     		mov	r5, r0
 236:Core/Src/main.c ****     //change rotate direction of wheel
 237:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 229              		.loc 1 237 5 is_stmt 1 view .LVU41
 230 0004 1A4C     		ldr	r4, .L22
 231 0006 0122     		movs	r2, #1
 232 0008 1146     		mov	r1, r2
 233 000a 2046     		mov	r0, r4
 234              	.LVL16:
 235              		.loc 1 237 5 is_stmt 0 view .LVU42
 236 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 237              	.LVL17:
 238:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 238              		.loc 1 238 5 is_stmt 1 view .LVU43
 239 0010 0022     		movs	r2, #0
 240 0012 0221     		movs	r1, #2
 241 0014 2046     		mov	r0, r4
 242 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 243              	.LVL18:
 239:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 244              		.loc 1 239 5 view .LVU44
 245 001a 0022     		movs	r2, #0
 246 001c 0421     		movs	r1, #4
 247 001e 2046     		mov	r0, r4
 248 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 249              	.LVL19:
 240:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 250              		.loc 1 240 5 view .LVU45
 251 0024 0122     		movs	r2, #1
 252 0026 4FF48061 		mov	r1, #1024
 253 002a 2046     		mov	r0, r4
 254 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 255              	.LVL20:
 241:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_RESET);
 256              		.loc 1 241 5 view .LVU46
 257 0030 0022     		movs	r2, #0
 258 0032 4FF40061 		mov	r1, #2048
 259 0036 2046     		mov	r0, r4
 260 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL21:
 242:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 262              		.loc 1 242 5 view .LVU47
 263 003c 0122     		movs	r2, #1
 264 003e 4FF48051 		mov	r1, #4096
 265 0042 2046     		mov	r0, r4
 266 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 267              	.LVL22:
 243:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_SET);
 268              		.loc 1 243 5 view .LVU48
 269 0048 0122     		movs	r2, #1
 270 004a 4FF40051 		mov	r1, #8192
 271 004e 2046     		mov	r0, r4
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 10


 272 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 273              	.LVL23:
 244:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 274              		.loc 1 244 5 view .LVU49
 275 0054 0022     		movs	r2, #0
 276 0056 4FF48041 		mov	r1, #16384
 277 005a 2046     		mov	r0, r4
 278 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 279              	.LVL24:
 245:Core/Src/main.c ****     //give pwm output
 246:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_1, pwm);
 280              		.loc 1 246 5 view .LVU50
 281 0060 044B     		ldr	r3, .L22+4
 282 0062 1B68     		ldr	r3, [r3]
 283 0064 5D63     		str	r5, [r3, #52]
 247:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_2, pwm);
 284              		.loc 1 247 5 view .LVU51
 285 0066 9D63     		str	r5, [r3, #56]
 248:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_3, pwm);
 286              		.loc 1 248 5 view .LVU52
 287 0068 DD63     		str	r5, [r3, #60]
 249:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_4, pwm);
 288              		.loc 1 249 5 view .LVU53
 289 006a 1D64     		str	r5, [r3, #64]
 250:Core/Src/main.c **** }
 290              		.loc 1 250 1 is_stmt 0 view .LVU54
 291 006c 38BD     		pop	{r3, r4, r5, pc}
 292              	.LVL25:
 293              	.L23:
 294              		.loc 1 250 1 view .LVU55
 295 006e 00BF     		.align	2
 296              	.L22:
 297 0070 000C0140 		.word	1073810432
 298 0074 00000000 		.word	htim8
 299              		.cfi_endproc
 300              	.LFE70:
 302              		.section	.text.rotate_clockwise,"ax",%progbits
 303              		.align	1
 304              		.global	rotate_clockwise
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu softvfp
 310              	rotate_clockwise:
 311              	.LVL26:
 312              	.LFB71:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** void rotate_clockwise(int pwm)
 253:Core/Src/main.c **** {
 313              		.loc 1 253 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		.loc 1 253 1 is_stmt 0 view .LVU57
 318 0000 38B5     		push	{r3, r4, r5, lr}
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 11


 321              		.cfi_offset 3, -16
 322              		.cfi_offset 4, -12
 323              		.cfi_offset 5, -8
 324              		.cfi_offset 14, -4
 325 0002 0546     		mov	r5, r0
 254:Core/Src/main.c ****     //change rotate direction of wheel
 255:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 326              		.loc 1 255 5 is_stmt 1 view .LVU58
 327 0004 1A4C     		ldr	r4, .L26
 328 0006 0022     		movs	r2, #0
 329 0008 0121     		movs	r1, #1
 330 000a 2046     		mov	r0, r4
 331              	.LVL27:
 332              		.loc 1 255 5 is_stmt 0 view .LVU59
 333 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL28:
 256:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 335              		.loc 1 256 5 is_stmt 1 view .LVU60
 336 0010 0122     		movs	r2, #1
 337 0012 0221     		movs	r1, #2
 338 0014 2046     		mov	r0, r4
 339 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 340              	.LVL29:
 257:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 341              		.loc 1 257 5 view .LVU61
 342 001a 0122     		movs	r2, #1
 343 001c 0421     		movs	r1, #4
 344 001e 2046     		mov	r0, r4
 345 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL30:
 258:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 347              		.loc 1 258 5 view .LVU62
 348 0024 0022     		movs	r2, #0
 349 0026 4FF48061 		mov	r1, #1024
 350 002a 2046     		mov	r0, r4
 351 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 352              	.LVL31:
 259:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_SET);
 353              		.loc 1 259 5 view .LVU63
 354 0030 0122     		movs	r2, #1
 355 0032 4FF40061 		mov	r1, #2048
 356 0036 2046     		mov	r0, r4
 357 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 358              	.LVL32:
 260:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 359              		.loc 1 260 5 view .LVU64
 360 003c 0022     		movs	r2, #0
 361 003e 4FF48051 		mov	r1, #4096
 362 0042 2046     		mov	r0, r4
 363 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 364              	.LVL33:
 261:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 365              		.loc 1 261 5 view .LVU65
 366 0048 0022     		movs	r2, #0
 367 004a 4FF40051 		mov	r1, #8192
 368 004e 2046     		mov	r0, r4
 369 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 12


 370              	.LVL34:
 262:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 371              		.loc 1 262 5 view .LVU66
 372 0054 0122     		movs	r2, #1
 373 0056 4FF48041 		mov	r1, #16384
 374 005a 2046     		mov	r0, r4
 375 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 376              	.LVL35:
 263:Core/Src/main.c ****     //give pwm output
 264:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_1, pwm);
 377              		.loc 1 264 5 view .LVU67
 378 0060 044B     		ldr	r3, .L26+4
 379 0062 1B68     		ldr	r3, [r3]
 380 0064 5D63     		str	r5, [r3, #52]
 265:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_2, pwm);
 381              		.loc 1 265 5 view .LVU68
 382 0066 9D63     		str	r5, [r3, #56]
 266:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_3, pwm);
 383              		.loc 1 266 5 view .LVU69
 384 0068 DD63     		str	r5, [r3, #60]
 267:Core/Src/main.c ****     __HAL_TIM_SetCompare(&htim8, TIM_CHANNEL_4, pwm);
 385              		.loc 1 267 5 view .LVU70
 386 006a 1D64     		str	r5, [r3, #64]
 268:Core/Src/main.c **** }
 387              		.loc 1 268 1 is_stmt 0 view .LVU71
 388 006c 38BD     		pop	{r3, r4, r5, pc}
 389              	.LVL36:
 390              	.L27:
 391              		.loc 1 268 1 view .LVU72
 392 006e 00BF     		.align	2
 393              	.L26:
 394 0070 000C0140 		.word	1073810432
 395 0074 00000000 		.word	htim8
 396              		.cfi_endproc
 397              	.LFE71:
 399              		.section	.text.Error_Handler,"ax",%progbits
 400              		.align	1
 401              		.global	Error_Handler
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
 407              	Error_Handler:
 408              	.LFB72:
 269:Core/Src/main.c **** /* USER CODE END 4 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 273:Core/Src/main.c ****   * @retval None
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c **** void Error_Handler(void)
 276:Core/Src/main.c **** {
 409              		.loc 1 276 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ Volatile: function does not return.
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 13


 414              		@ link register save eliminated.
 277:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 278:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 279:Core/Src/main.c ****     __disable_irq();
 415              		.loc 1 279 5 view .LVU74
 416              	.LBB4:
 417              	.LBI4:
 418              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 14


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 15


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 419              		.loc 2 140 27 view .LVU75
 420              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 421              		.loc 2 142 3 view .LVU76
 422              		.syntax unified
 423              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 424 0000 72B6     		cpsid i
 425              	@ 0 "" 2
 426              		.thumb
 427              		.syntax unified
 428              	.L29:
 429              	.LBE5:
 430              	.LBE4:
 280:Core/Src/main.c ****     while (1)
 431              		.loc 1 280 5 discriminator 1 view .LVU77
 281:Core/Src/main.c ****     {
 282:Core/Src/main.c ****     }
 432              		.loc 1 282 5 discriminator 1 view .LVU78
 280:Core/Src/main.c ****     while (1)
 433              		.loc 1 280 11 discriminator 1 view .LVU79
 434 0002 FEE7     		b	.L29
 435              		.cfi_endproc
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 16


 436              	.LFE72:
 438              		.section	.text.SystemClock_Config,"ax",%progbits
 439              		.align	1
 440              		.global	SystemClock_Config
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 446              	SystemClock_Config:
 447              	.LFB67:
 179:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 448              		.loc 1 179 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 64
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 00B5     		push	{lr}
 453              	.LCFI4:
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 14, -4
 456 0002 91B0     		sub	sp, sp, #68
 457              	.LCFI5:
 458              		.cfi_def_cfa_offset 72
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 459              		.loc 1 180 3 view .LVU81
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 460              		.loc 1 180 22 is_stmt 0 view .LVU82
 461 0004 2822     		movs	r2, #40
 462 0006 0021     		movs	r1, #0
 463 0008 06A8     		add	r0, sp, #24
 464 000a FFF7FEFF 		bl	memset
 465              	.LVL37:
 181:Core/Src/main.c **** 
 466              		.loc 1 181 3 is_stmt 1 view .LVU83
 181:Core/Src/main.c **** 
 467              		.loc 1 181 22 is_stmt 0 view .LVU84
 468 000e 0023     		movs	r3, #0
 469 0010 0193     		str	r3, [sp, #4]
 470 0012 0293     		str	r3, [sp, #8]
 471 0014 0393     		str	r3, [sp, #12]
 472 0016 0493     		str	r3, [sp, #16]
 473 0018 0593     		str	r3, [sp, #20]
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 474              		.loc 1 186 3 is_stmt 1 view .LVU85
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 475              		.loc 1 186 36 is_stmt 0 view .LVU86
 476 001a 0122     		movs	r2, #1
 477 001c 0692     		str	r2, [sp, #24]
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 478              		.loc 1 187 3 is_stmt 1 view .LVU87
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 479              		.loc 1 187 30 is_stmt 0 view .LVU88
 480 001e 4FF48033 		mov	r3, #65536
 481 0022 0793     		str	r3, [sp, #28]
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 482              		.loc 1 188 3 is_stmt 1 view .LVU89
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 483              		.loc 1 189 3 view .LVU90
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 17


 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 484              		.loc 1 189 30 is_stmt 0 view .LVU91
 485 0024 0A92     		str	r2, [sp, #40]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 486              		.loc 1 190 3 is_stmt 1 view .LVU92
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 487              		.loc 1 190 34 is_stmt 0 view .LVU93
 488 0026 0222     		movs	r2, #2
 489 0028 0D92     		str	r2, [sp, #52]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 490              		.loc 1 191 3 is_stmt 1 view .LVU94
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 491              		.loc 1 191 35 is_stmt 0 view .LVU95
 492 002a 0E93     		str	r3, [sp, #56]
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 493              		.loc 1 192 3 is_stmt 1 view .LVU96
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 494              		.loc 1 192 32 is_stmt 0 view .LVU97
 495 002c 4FF4E013 		mov	r3, #1835008
 496 0030 0F93     		str	r3, [sp, #60]
 193:Core/Src/main.c ****   {
 497              		.loc 1 193 3 is_stmt 1 view .LVU98
 193:Core/Src/main.c ****   {
 498              		.loc 1 193 7 is_stmt 0 view .LVU99
 499 0032 06A8     		add	r0, sp, #24
 500 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 501              	.LVL38:
 193:Core/Src/main.c ****   {
 502              		.loc 1 193 6 view .LVU100
 503 0038 80B9     		cbnz	r0, .L34
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 504              		.loc 1 199 3 is_stmt 1 view .LVU101
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 505              		.loc 1 199 31 is_stmt 0 view .LVU102
 506 003a 0F23     		movs	r3, #15
 507 003c 0193     		str	r3, [sp, #4]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 508              		.loc 1 201 3 is_stmt 1 view .LVU103
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 509              		.loc 1 201 34 is_stmt 0 view .LVU104
 510 003e 0221     		movs	r1, #2
 511 0040 0291     		str	r1, [sp, #8]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 512              		.loc 1 202 3 is_stmt 1 view .LVU105
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 513              		.loc 1 202 35 is_stmt 0 view .LVU106
 514 0042 0023     		movs	r3, #0
 515 0044 0393     		str	r3, [sp, #12]
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 516              		.loc 1 203 3 is_stmt 1 view .LVU107
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 517              		.loc 1 203 36 is_stmt 0 view .LVU108
 518 0046 4FF48062 		mov	r2, #1024
 519 004a 0492     		str	r2, [sp, #16]
 204:Core/Src/main.c **** 
 520              		.loc 1 204 3 is_stmt 1 view .LVU109
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 18


 521              		.loc 1 204 36 is_stmt 0 view .LVU110
 522 004c 0593     		str	r3, [sp, #20]
 206:Core/Src/main.c ****   {
 523              		.loc 1 206 3 is_stmt 1 view .LVU111
 206:Core/Src/main.c ****   {
 524              		.loc 1 206 7 is_stmt 0 view .LVU112
 525 004e 01A8     		add	r0, sp, #4
 526 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 527              	.LVL39:
 206:Core/Src/main.c ****   {
 528              		.loc 1 206 6 view .LVU113
 529 0054 20B9     		cbnz	r0, .L35
 210:Core/Src/main.c **** 
 530              		.loc 1 210 1 view .LVU114
 531 0056 11B0     		add	sp, sp, #68
 532              	.LCFI6:
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 4
 535              		@ sp needed
 536 0058 5DF804FB 		ldr	pc, [sp], #4
 537              	.L34:
 538              	.LCFI7:
 539              		.cfi_restore_state
 195:Core/Src/main.c ****   }
 540              		.loc 1 195 5 is_stmt 1 view .LVU115
 541 005c FFF7FEFF 		bl	Error_Handler
 542              	.LVL40:
 543              	.L35:
 208:Core/Src/main.c ****   }
 544              		.loc 1 208 5 view .LVU116
 545 0060 FFF7FEFF 		bl	Error_Handler
 546              	.LVL41:
 547              		.cfi_endproc
 548              	.LFE67:
 550              		.section	.text.main,"ax",%progbits
 551              		.align	1
 552              		.global	main
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu softvfp
 558              	main:
 559              	.LFB66:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 560              		.loc 1 99 1 view -0
 561              		.cfi_startproc
 562              		@ Volatile: function does not return.
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565 0000 08B5     		push	{r3, lr}
 566              	.LCFI8:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 3, -8
 569              		.cfi_offset 14, -4
 106:Core/Src/main.c **** 
 570              		.loc 1 106 3 view .LVU118
 571 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 19


 572              	.LVL42:
 109:Core/Src/main.c ****     SetBaud(115200);
 573              		.loc 1 109 5 view .LVU119
 574 0006 494D     		ldr	r5, .L39
 575 0008 2846     		mov	r0, r5
 576 000a FFF7FEFF 		bl	jy62_Init
 577              	.LVL43:
 110:Core/Src/main.c ****     SetHorizontal();
 578              		.loc 1 110 5 view .LVU120
 579 000e 4FF4E130 		mov	r0, #115200
 580 0012 FFF7FEFF 		bl	SetBaud
 581              	.LVL44:
 111:Core/Src/main.c ****     InitAngle();
 582              		.loc 1 111 5 view .LVU121
 583 0016 FFF7FEFF 		bl	SetHorizontal
 584              	.LVL45:
 112:Core/Src/main.c ****     Calibrate();
 585              		.loc 1 112 5 view .LVU122
 586 001a FFF7FEFF 		bl	InitAngle
 587              	.LVL46:
 113:Core/Src/main.c ****     SleepOrAwake();
 588              		.loc 1 113 5 view .LVU123
 589 001e FFF7FEFF 		bl	Calibrate
 590              	.LVL47:
 114:Core/Src/main.c ****   /* USER CODE END Init */
 591              		.loc 1 114 5 view .LVU124
 592 0022 FFF7FEFF 		bl	SleepOrAwake
 593              	.LVL48:
 118:Core/Src/main.c **** 
 594              		.loc 1 118 3 view .LVU125
 595 0026 FFF7FEFF 		bl	SystemClock_Config
 596              	.LVL49:
 125:Core/Src/main.c ****   MX_TIM1_Init();
 597              		.loc 1 125 3 view .LVU126
 598 002a FFF7FEFF 		bl	MX_GPIO_Init
 599              	.LVL50:
 126:Core/Src/main.c ****   MX_TIM2_Init();
 600              		.loc 1 126 3 view .LVU127
 601 002e FFF7FEFF 		bl	MX_TIM1_Init
 602              	.LVL51:
 127:Core/Src/main.c ****   MX_TIM8_Init();
 603              		.loc 1 127 3 view .LVU128
 604 0032 FFF7FEFF 		bl	MX_TIM2_Init
 605              	.LVL52:
 128:Core/Src/main.c ****   MX_TIM3_Init();
 606              		.loc 1 128 3 view .LVU129
 607 0036 FFF7FEFF 		bl	MX_TIM8_Init
 608              	.LVL53:
 129:Core/Src/main.c ****   MX_TIM4_Init();
 609              		.loc 1 129 3 view .LVU130
 610 003a FFF7FEFF 		bl	MX_TIM3_Init
 611              	.LVL54:
 130:Core/Src/main.c ****   MX_DMA_Init();
 612              		.loc 1 130 3 view .LVU131
 613 003e FFF7FEFF 		bl	MX_TIM4_Init
 614              	.LVL55:
 131:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 20


 615              		.loc 1 131 3 view .LVU132
 616 0042 FFF7FEFF 		bl	MX_DMA_Init
 617              	.LVL56:
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 618              		.loc 1 132 3 view .LVU133
 619 0046 FFF7FEFF 		bl	MX_USART2_UART_Init
 620              	.LVL57:
 133:Core/Src/main.c ****   MX_TIM5_Init();
 621              		.loc 1 133 3 view .LVU134
 622 004a FFF7FEFF 		bl	MX_USART1_UART_Init
 623              	.LVL58:
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 624              		.loc 1 134 3 view .LVU135
 625 004e FFF7FEFF 		bl	MX_TIM5_Init
 626              	.LVL59:
 136:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim1);
 627              		.loc 1 136 5 view .LVU136
 628 0052 3748     		ldr	r0, .L39+4
 629 0054 FFF7FEFF 		bl	zigbee_Init
 630              	.LVL60:
 137:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_1);
 631              		.loc 1 137 5 view .LVU137
 632 0058 3648     		ldr	r0, .L39+8
 633 005a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 634              	.LVL61:
 138:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 635              		.loc 1 138 5 view .LVU138
 636 005e 364C     		ldr	r4, .L39+12
 637 0060 0021     		movs	r1, #0
 638 0062 2046     		mov	r0, r4
 639 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 640              	.LVL62:
 139:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_3);
 641              		.loc 1 139 5 view .LVU139
 642 0068 0421     		movs	r1, #4
 643 006a 2046     		mov	r0, r4
 644 006c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 645              	.LVL63:
 140:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_4);
 646              		.loc 1 140 5 view .LVU140
 647 0070 0821     		movs	r1, #8
 648 0072 2046     		mov	r0, r4
 649 0074 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 650              	.LVL64:
 141:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_1);
 651              		.loc 1 141 5 view .LVU141
 652 0078 0C21     		movs	r1, #12
 653 007a 2046     		mov	r0, r4
 654 007c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 655              	.LVL65:
 142:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_2);
 656              		.loc 1 142 5 view .LVU142
 657 0080 2E4C     		ldr	r4, .L39+16
 658 0082 0021     		movs	r1, #0
 659 0084 2046     		mov	r0, r4
 660 0086 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 661              	.LVL66:
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 21


 143:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_1);
 662              		.loc 1 143 5 view .LVU143
 663 008a 0421     		movs	r1, #4
 664 008c 2046     		mov	r0, r4
 665 008e FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 666              	.LVL67:
 144:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_2);
 667              		.loc 1 144 5 view .LVU144
 668 0092 2B4C     		ldr	r4, .L39+20
 669 0094 0021     		movs	r1, #0
 670 0096 2046     		mov	r0, r4
 671 0098 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 672              	.LVL68:
 145:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_1);
 673              		.loc 1 145 5 view .LVU145
 674 009c 0421     		movs	r1, #4
 675 009e 2046     		mov	r0, r4
 676 00a0 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 677              	.LVL69:
 146:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_2);
 678              		.loc 1 146 5 view .LVU146
 679 00a4 274C     		ldr	r4, .L39+24
 680 00a6 0021     		movs	r1, #0
 681 00a8 2046     		mov	r0, r4
 682 00aa FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 683              	.LVL70:
 147:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_1);
 684              		.loc 1 147 5 view .LVU147
 685 00ae 0421     		movs	r1, #4
 686 00b0 2046     		mov	r0, r4
 687 00b2 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 688              	.LVL71:
 148:Core/Src/main.c ****     HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_2);
 689              		.loc 1 148 5 view .LVU148
 690 00b6 244C     		ldr	r4, .L39+28
 691 00b8 0021     		movs	r1, #0
 692 00ba 2046     		mov	r0, r4
 693 00bc FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 694              	.LVL72:
 149:Core/Src/main.c ****     jy62_Init(&huart2);
 695              		.loc 1 149 5 view .LVU149
 696 00c0 0421     		movs	r1, #4
 697 00c2 2046     		mov	r0, r4
 698 00c4 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 699              	.LVL73:
 150:Core/Src/main.c ****     void jy62_Init(UART_HandleTypeDef * huart);
 700              		.loc 1 150 5 view .LVU150
 701 00c8 2846     		mov	r0, r5
 702 00ca FFF7FEFF 		bl	jy62_Init
 703              	.LVL74:
 151:Core/Src/main.c **** 
 704              		.loc 1 151 5 view .LVU151
 153:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 705              		.loc 1 153 5 view .LVU152
 706 00ce 1F4C     		ldr	r4, .L39+32
 707 00d0 0122     		movs	r2, #1
 708 00d2 1146     		mov	r1, r2
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 22


 709 00d4 2046     		mov	r0, r4
 710 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 711              	.LVL75:
 154:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 712              		.loc 1 154 5 view .LVU153
 713 00da 0022     		movs	r2, #0
 714 00dc 0221     		movs	r1, #2
 715 00de 2046     		mov	r0, r4
 716 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 717              	.LVL76:
 155:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 718              		.loc 1 155 5 view .LVU154
 719 00e4 0022     		movs	r2, #0
 720 00e6 0421     		movs	r1, #4
 721 00e8 2046     		mov	r0, r4
 722 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 723              	.LVL77:
 156:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_SET);
 724              		.loc 1 156 5 view .LVU155
 725 00ee 0122     		movs	r2, #1
 726 00f0 4FF48061 		mov	r1, #1024
 727 00f4 2046     		mov	r0, r4
 728 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 729              	.LVL78:
 157:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 730              		.loc 1 157 5 view .LVU156
 731 00fa 0122     		movs	r2, #1
 732 00fc 4FF40061 		mov	r1, #2048
 733 0100 2046     		mov	r0, r4
 734 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 735              	.LVL79:
 158:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 736              		.loc 1 158 5 view .LVU157
 737 0106 0022     		movs	r2, #0
 738 0108 4FF48051 		mov	r1, #4096
 739 010c 2046     		mov	r0, r4
 740 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 741              	.LVL80:
 159:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 742              		.loc 1 159 5 view .LVU158
 743 0112 0022     		movs	r2, #0
 744 0114 4FF40051 		mov	r1, #8192
 745 0118 2046     		mov	r0, r4
 746 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 747              	.LVL81:
 160:Core/Src/main.c ****   /* USER CODE END 2 */
 748              		.loc 1 160 5 view .LVU159
 749 011e 0122     		movs	r2, #1
 750 0120 4FF48041 		mov	r1, #16384
 751 0124 2046     		mov	r0, r4
 752 0126 FFF7FEFF 		bl	HAL_GPIO_WritePin
 753              	.LVL82:
 754              	.L37:
 165:Core/Src/main.c ****     {
 755              		.loc 1 165 5 discriminator 1 view .LVU160
 170:Core/Src/main.c ****   /* USER CODE END 3 */
 756              		.loc 1 170 5 discriminator 1 view .LVU161
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 23


 165:Core/Src/main.c ****     {
 757              		.loc 1 165 11 discriminator 1 view .LVU162
 758 012a FEE7     		b	.L37
 759              	.L40:
 760              		.align	2
 761              	.L39:
 762 012c 00000000 		.word	huart2
 763 0130 00000000 		.word	huart1
 764 0134 00000000 		.word	htim1
 765 0138 00000000 		.word	htim8
 766 013c 00000000 		.word	htim2
 767 0140 00000000 		.word	htim3
 768 0144 00000000 		.word	htim4
 769 0148 00000000 		.word	htim5
 770 014c 000C0140 		.word	1073810432
 771              		.cfi_endproc
 772              	.LFE66:
 774              		.global	state
 775              		.global	Kd
 776              		.global	Ki
 777              		.global	Kp
 778              		.global	angle_obj
 779              		.global	distance4
 780              		.global	distance3
 781              		.global	distance2
 782              		.global	distance1
 783              		.global	count_to_ten
 784              		.global	set_speed
 785              		.section	.bss.angle_obj,"aw",%nobits
 786              		.align	2
 789              	angle_obj:
 790 0000 00000000 		.space	4
 791              		.section	.bss.count_to_ten,"aw",%nobits
 792              		.align	2
 795              	count_to_ten:
 796 0000 00000000 		.space	4
 797              		.section	.bss.distance1,"aw",%nobits
 798              		.align	2
 801              	distance1:
 802 0000 00000000 		.space	4
 803              		.section	.bss.distance2,"aw",%nobits
 804              		.align	2
 807              	distance2:
 808 0000 00000000 		.space	4
 809              		.section	.bss.distance3,"aw",%nobits
 810              		.align	2
 813              	distance3:
 814 0000 00000000 		.space	4
 815              		.section	.bss.distance4,"aw",%nobits
 816              		.align	2
 819              	distance4:
 820 0000 00000000 		.space	4
 821              		.section	.bss.state,"aw",%nobits
 822              		.align	2
 823              		.set	.LANCHOR0,. + 0
 826              	state:
 827 0000 00000000 		.space	12
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 24


 827      00000000 
 827      00000000 
 828              		.section	.data.set_speed,"aw"
 829              		.align	2
 832              	set_speed:
 833 0000 00002041 		.word	1092616192
 834              		.section	.rodata.Kd,"a"
 835              		.align	2
 838              	Kd:
 839 0000 00004842 		.word	1112014848
 840              		.section	.rodata.Ki,"a"
 841              		.align	2
 844              	Ki:
 845 0000 0000ECC2 		.word	-1024720896
 846              		.section	.rodata.Kp,"a"
 847              		.align	2
 850              	Kp:
 851 0000 00009643 		.word	1133903872
 852              		.text
 853              	.Letext0:
 854              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 855              		.file 4 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 856              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 857              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 858              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 859              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 860              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 861              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 862              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 863              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 864              		.file 13 "Core/Inc/tim.h"
 865              		.file 14 "Core/Inc/usart.h"
 866              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 867              		.file 16 "Core/Inc/jy62.h"
 868              		.file 17 "Core/Inc/gpio.h"
 869              		.file 18 "Core/Inc/dma.h"
 870              		.file 19 "<built-in>"
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:16     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:24     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:53     .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:63     .text.pid:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:70     .text.pid:00000000 pid
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:169    .text.pid:00000064 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:178    .text.Abs:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:185    .text.Abs:00000000 Abs
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:206    .text.rotate_counterclockwise:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:213    .text.rotate_counterclockwise:00000000 rotate_counterclockwise
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:297    .text.rotate_counterclockwise:00000070 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:303    .text.rotate_clockwise:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:310    .text.rotate_clockwise:00000000 rotate_clockwise
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:394    .text.rotate_clockwise:00000070 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:400    .text.Error_Handler:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:407    .text.Error_Handler:00000000 Error_Handler
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:439    .text.SystemClock_Config:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:446    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:551    .text.main:00000000 $t
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:558    .text.main:00000000 main
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:762    .text.main:0000012c $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:826    .bss.state:00000000 state
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:838    .rodata.Kd:00000000 Kd
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:844    .rodata.Ki:00000000 Ki
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:850    .rodata.Kp:00000000 Kp
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:789    .bss.angle_obj:00000000 angle_obj
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:819    .bss.distance4:00000000 distance4
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:813    .bss.distance3:00000000 distance3
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:807    .bss.distance2:00000000 distance2
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:801    .bss.distance1:00000000 distance1
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:795    .bss.count_to_ten:00000000 count_to_ten
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:832    .data.set_speed:00000000 set_speed
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:786    .bss.angle_obj:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:792    .bss.count_to_ten:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:798    .bss.distance1:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:804    .bss.distance2:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:810    .bss.distance3:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:816    .bss.distance4:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:822    .bss.state:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:829    .data.set_speed:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:835    .rodata.Kd:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:841    .rodata.Ki:00000000 $d
C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s:847    .rodata.Kp:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Receive_DMA
jy62Receive
huart2
__aeabi_fmul
__aeabi_fadd
__aeabi_fcmpge
__aeabi_fcmple
HAL_GPIO_WritePin
htim8
memset
ARM GAS  C:\Users\zhangjd\AppData\Local\Temp\ccAsOFMS.s 			page 26


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
jy62_Init
SetBaud
SetHorizontal
InitAngle
Calibrate
SleepOrAwake
MX_GPIO_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM8_Init
MX_TIM3_Init
MX_TIM4_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_USART1_UART_Init
MX_TIM5_Init
zigbee_Init
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
huart1
htim1
htim2
htim3
htim4
htim5
